#include <iostream>

using namespace std;
typedef int int_array[4]; 
int main()
{
	//大小为3的数组，每个元素是含有4个整数的数组
	int a[3][4] = {
		{0, 1, 2, 3},
		{4, 5, 6, 7},
		{8, 9, 10, 11}
	};
	//没有标识每行的花括号，与之前的初始化语句是等价的
	int ia[3][4] = {0,1,2,3,4,5,6,7,8,9,10,11};
	//显示地初始化每行地首元素
	int ib[3][4] = {{0}, {4}, {8}};
	//显示地初始化第1行，其它元素执行值初始化
	int ix[3][4] = {0, 3, 6, 9};
	//将所有元素初始化为0 
	int arr[10][20][30] = {0};
	
	//指针与多维数组
	int (*ip)[4];//ip是一个指针，指向int类型的数组，数组中有4个元素
//	int *ip[4];//ip是一个数组，每个元素都是指向int的指针 
	ip = a;//指向a的第一个元素
//	cout << *ip << " " << *(ip+1) << " " << *(ip+2) << " " << *(ip+3) << endl;//不对
	for(int *q=*ip; q != *ip+4; ++q)
		cout << *q << endl;//0 1 2 3
		
	ip = &a[2];//ip指向第三行
	for(int *q=*ip; q != *ip+4; ++q)
		cout << *q << endl;//8 9 10 11
	
	for(int_array *p=a; p != a+3; ++p){//a是多维数组的第一行，a+3是多维数组的第三行
	//p是指向int[4]的指针，*p是int[4]，名字同时表示int[4]的首地址，*p+4表示第一行的末尾的下一个元素
	for(int *q = *p; q != *p+4; ++q)
		cout << *q << " ";
	cout << endl;
	}
	return 0;
 } 
